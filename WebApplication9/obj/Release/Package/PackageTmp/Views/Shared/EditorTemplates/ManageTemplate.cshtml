@model PagedList.IPagedList<WebApplication9.Data.Requisition>
@using WebApplication9.Data.Helpers

@foreach (var requisition in Model)
{
    <div class="review-block padding" id="blk-@requisition.RequisitionId">
        @if (requisition.Status != StatusEnum.Void)
        {
            <p class="requisition-void" id="req-void_@requisition.RequisitionId" data-attr='@requisition.RequisitionId'>Void</p>
        }
        @Html.EditorFor(model => requisition)

        <div class="user-explanation-block">
            <div class="left rmi row-main-inline">
                @Html.LabelFor(model => requisition.Explanation, new { @class = "control-label" })
                <div class="requisition-detail-content">
                    @Html.DisplayFor(model => requisition.Explanation)
                </div>
            </div>
            <div class="left rmi row-main-inline">
                @Html.LabelFor(model => requisition.Decision_By, new { @class = "control-label" })
                <div class="requisition-detail-content">
                    @Html.DisplayFor(model => requisition.Decision_By)
                </div>
            </div>
        </div>

        <div class="custom-box">
            @using (Ajax.BeginForm("Manage", "Requisition", new { id = requisition.RequisitionId },
                    new AjaxOptions
                    {
                        OnBegin = "SetSpinner",
                        OnSuccess = "SetCompleted(" + requisition.RequisitionId + ")",
                        OnFailure = "Failure"
                    }))
            {
                Html.RenderPartial("_Process", new WebApplication9.Data.ReqAdd());
                <div style="float:right">
                    <input type="submit" value="Process" id="proceed" class="btn-mnu btn-default" />
                </div>
            }
        </div>
    </div>
}